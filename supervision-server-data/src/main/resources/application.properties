spring.application.name=supervision-data
server.port = 8092
server.context-path=/api/v1.0

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# spring.datasource.url=jdbc:mysql://localhost:3306/supervision?autoReconnect=true&useSSL=false
#Dev database of Planzone
# spring.datasource.url=jdbc:mysql://localhost:3306/planzone?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true

# Username and password
#spring.datasource.username=root
#spring.datasource.password=force10

# Staging
spring.datasource.url=jdbc:mysql://149.202.169.100:3306/planzone?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true
spring.datasource.username=api
spring.datasource.password=Iep0stag

spring.datasource.driver-class-name=com.mysql.jdbc.Driver




# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto = create-drop
#spring.jpa.hibernate.ddl-auto = create
#spring.jpa.hibernate.ddl-auto = update
spring.jpa.hibernate.ddl-auto = none

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# ===============================
# = Security with OAuth2 and JWT
# ===============================

security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Supervision-JWT-Realm

security.jwt.client-id=jwtclientid
security.jwt.client-secret=XY7kmzoNzl100
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid

# Configuration Netflix Eureka: Services discovery
eureka.client.serviceUrl.defaultZone=http://localhost:8762/eureka
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.metadata-map.instanceId=${spring.application.name}:${server.port}

logging.level.com.netflix.discovery=WARN


# Cache enabled with hazelcast
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.use_query_cache=true
spring.jpa.properties.hibernate.cache.use_native_client=true
spring.jpa.properties.hibernate.default_batch_fetch_size=16

# Activate Hazelcast for Level 2 Hibernate
spring.jpa.properties.hibernate.cache.region.factory_class=com.hazelcast.hibernate.HazelcastCacheRegionFactory
